rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Movie reviews collection
    match /movie_reviews/{reviewId} {
      // Anyone authenticated can read reviews
      allow read: if request.auth != null;
      
      // Only authenticated users can create reviews
      allow create: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      
      // Users can only edit their own reviews
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      
      // Anyone authenticated can like reviews (increment likes/dislikes)
      allow update: if request.auth != null 
        && request.writeFields.hasOnly(['likes', 'dislikes']);
      
      // Users can delete their own reviews
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }
    
    // Movies collection - read-only for all authenticated users
    match /movies/{movieId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can write movies
    }
    
    // Deny all other requests
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
